---
layout: post
title: 次世代的i18n瑞士军刀——Grammatical Framework
date: {}
categories: lang gf
published: true
---

规则的语言更易于学习，也更易于计算机的处理，这一点毋庸置疑。虽然认知语言学认为很多形式语言学中认定界限分明的东西实际上是密不可分的。语言的目的是用有限的元素和规则生成无穷多的句子，表达无限多的含义，换言之，只要足以涵盖语义空间的任何一点或一个区域，语言可以使用任何想象到的方式，比如我喜欢的方式：用尽量简单的基本句法结构加上无限的扩展能力，组成句子的框架，再加上表达连续语义的词汇，组成完整的句子。句法结构的归约过程中，任何一个分子（如形式文法中的非终结符）的定义是明确的和离散的，而词汇和词汇的有机组合所代表的语义是连续的（未必是模糊的）。一个离散系统和一个连续系统的叠加自然可以得到一个连续系统，表达能力完全可以等同于任何我们熟知的语言。

Grammatical Framework（下文简称GF）通过定义一种新的函数式编程语言为我们提供了定义形式化文法的新方式，它的灵活性强过BNF，但最终可以转换为等价的BNF表达，当然也可以由BNF（似乎也包括EBNF）反向生成GF文法。

按照官方的说法，GF是：

1. 一个专为定义形式文法而设计的特定语言
2. 一个函数式编程语言
3. 一个自然语言语法的开发平台
4. 一种范畴语法的表达
5. 一个逻辑框架（如Coq用于形式证明）
6. 一个机器翻译平台

官方已经基于GF制作了很多示例，从简单的i18n解决方案到直言三段论的解决器再到更复杂的基于移动端的语音和文本翻译工具（当然语音是基于Google为Android设计的算法，与GF无关）。

顺便插一嘴，有论文指出英语不是一个上下文无关语言（[戳这里](http://www.eecs.harvard.edu/~shieber/Biblio/Papers/shieber85.pdf)），也有人针锋相对地提出了抗议（[戳这里](http://delivery.acm.org/10.1145/980000/970173/p182-pullum.pdf?ip=58.34.229.32&id=970173&acc=OPEN&key=4D4702B0C3E38B35%2E4D4702B0C3E38B35%2E4D4702B0C3E38B35%2E6D218144511F3437&CFID=623058025&CFTOKEN=27801323&__acm__=1422733954_e785ca985e3c686afdf865b74d806ceb)），但有两点不可否认：其一，逻辑语的存在证明了上下文无关语言的完备性；其二，Grammatical Framework的开发人员已经根据[Krasimir Angelov和Peter Ljunglöf的论文](http://www.aclweb.org/anthology/E/E14/E14-1.pdf#page=394)设计出了基于CFG解析的机器翻译工具。尽管不能保证有效性，但随着形式语法的完备，翻译的质量只会越来越高。

逻辑语官方声称逻辑语是无句法歧义的，他们定义了两种形式文法来试图说明这一点（YACC，EBNF），但我们知道，YACC和EBNF定义上下文无关文法（CFG），而CFG本身并不能确保它是无歧义的，更为恶劣的是，已知一个CFG，判断它是否无歧义这个问题是一个“不可确定问题”。

2011年初，逻辑语PEG形式文法的维护者.alyn.post.提出Proposed 4th Baseline，用PEG文法来代替3rd Baseline中的两种形式文法，如果可以实现，那么就从根本上证明了逻辑语句法的无歧义性（其实很简单，PEG遇到不确定分支时会优先挑选先行分支，解决了CFG解析过程中的Shift/Reduce Conflict），本人声称已经实现，但[链接](http://wiki.call-cc.org/eggref/4/genturfahi)打不开。。。

太晚了，明天再写吧。。。